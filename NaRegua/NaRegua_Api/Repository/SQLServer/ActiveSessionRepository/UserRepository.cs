using NaRegua_Api.Repository.SQLServer;

namespace NaRegua_Api.Repository.SQLServer.ActiveSessionRepository
{
    public class UserRepository : UserRepositorySQLServer
    {
        protected override string INSERT_USER => 
            "INSERT INTO [USERS] VALUES (@NAME, @DOCUMENT, @EMAIL, @PHONE, @USERNAME, @PASSWORD, @ISCUSTOMER)";

        protected override string INSERT_FAVORITE_SALOON => 
            "INSERT INTO [USERS_FAVORITE_SALONS] VALUES (@USER_DOCUMENT, @SALOON_CODE)";

        protected override string DELETE_FAVORITE_SALOON => 
            "DELETE FROM [USERS_FAVORITE_SALONS] WHERE USER_DOCUMENT = @USER_DOCUMENT AND SALOON_CODE = @SALOON_CODE";

        protected override string SELECT_FAVORITE_SALOON =>
            "SELECT DISTINCT SALOON_CODE FROM USERS_FAVORITE_SALONS WHERE USER_DOCUMENT = @USER_DOCUMENT AND SALOON_CODE = @SALOON_CODE";

        protected override string SELECT_USER_FAVORITE_SALOON =>
            "SELECT B.* FROM USERS_FAVORITE_SALONS AS A " +
            "LEFT JOIN SALOONS AS B " +
            "ON A.SALOON_CODE = B.CODE " +
            "WHERE A.USER_DOCUMENT = @USER_DOCUMENT";

        protected override string SELECT_SALOONS_CODE =>
            "SELECT DISTINCT CODE FROM SALOONS WHERE CODE = @CODE";

        protected override string SELECT_APPOINTMENTS =>
            "SELECT * FROM SCHEDULING_USERS WHERE USER_DOCUMENT = @USER_DOCUMENT AND DATETIME >= @DATETIME";

        protected override string SELECT_COUNT_SCHEDULING_USER =>
            "SELECT COUNT(*) FROM SCHEDULING_USERS WHERE USER_DOCUMENT = @USER_DOCUMENT AND [DATETIME] <= GETDATE() + 30";

        protected override string DELETE_AVAILABILITY_FROM_PROFESSIONAL =>
            "DELETE FROM AVAILABILITY_PROFESSIONALS WHERE PROFESSIONAL_DOCUMENT = @PROFESSIONAL_DOCUMENT AND [DATETIME] = @DATE";

        protected override string SELECT_AVAILABILITY_AND_INFOs_FROM_PROFESSIONAL =>
            "SELECT DISTINCT " +
            "B.NAME, B.PHONE, D.ADDRESS " +
            "FROM AVAILABILITY_PROFESSIONALS AS A " +
            "LEFT JOIN USERS AS B " +
            "ON A.PROFESSIONAL_DOCUMENT = B.DOCUMENT " +
            "LEFT JOIN HAIRDRESSERS_SALOON AS C " +
            "ON B.DOCUMENT = C.DOCUMENT " +
            "LEFT JOIN SALOONS AS D " +
            "ON C.SALOON_CODE = D.CODE " +
            "WHERE A.PROFESSIONAL_DOCUMENT = @PROFESSIONAL_DOCUMENT AND A.[DATETIME] = @DATE";

        protected override string INSERT_SCHEDULING_USER =>
            "INSERT INTO SCHEDULING_USERS VALUES (@USER_DOCUMENT, @PROFESSIONAL_NAME, @PROFESSIONAL_PHONE, @SALOON_ADRESS, @DATE)";

        protected override string SELECT_USER_FROM_USERNAME => "SELECT * FROM [USERS] WHERE USERNAME = @USERNAME";
    }
}
